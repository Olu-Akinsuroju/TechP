# Python / Django
__pycache__/
*.py[cod]
*$py.class
*.so
*.egg-info/
dist/ # Python dist directory
build/ # Python build directory (distinct from backend/build for React)

# Django specifics
*.log
db.sqlite3
*.sqlite3
*.db
instance/
*.mo
*.pot

# Virtualenv
venv/
env/
ENV/
.venv/
.env/

# Secrets
*.env
.env.*
!/.env.example # Allow example env files

# Node.js (for frontend if not handled by frontend/.gitignore)
# Generally, frontend/.gitignore should handle node_modules within frontend
# but this provides a root-level catch if needed.
# node_modules/ # Usually in techpath-project/frontend/node_modules/
# techpath-project/frontend/node_modules/ # More specific
# techpath-project/frontend/dist/ # Build output of frontend

# IDE / Editor specific
.vscode/
.idea/
*.swp
*~
*.sublime-project
*.sublime-workspace

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Static files collected by Django (if using collectstatic to a different root)
# However, our STATIC_ROOT is 'staticfiles_build' inside backend, which should be covered if 'backend/staticfiles_build' is ignored
# Or if 'staticfiles_build/' is added generally
staticfiles_build/ # Covers backend/staticfiles_build

# Coverage reports
coverage/
.coverage
*.coverage.*

# Jupyter Notebook
.ipynb_checkpoints

# Linters
.ruff_cache/
.mypy_cache/
.pytest_cache/
